generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  gifts     Gift[]
}

model Space {
  id            Int            @id @default(autoincrement())
  name          String
  description   String?
  inviteCode    String         @unique
  joinCode      String         @unique
  mode          String
  points        Int            @default(0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  wishlistItems WishlistItem[]
  rewards       Reward[]
}

model WishlistItem {
  id         Int       @id @default(autoincrement())
  spaceId    Int
  title      String
  url        String?
  image      String?
  priceCents Int?
  category   String?
  notes      String?
  priority   Priority  @default(MEDIUM)
  archived   Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  space      Space     @relation(fields: [spaceId], references: [id])
  gift       Gift?
}

model Gift {
  id                Int         @id @default(autoincrement())
  wishlistItemId    Int         @unique
  giverId           Int?
  status            GiftStatus  @default(PENDING)
  sentimentPoints   Int?
  pricePointsLocked Int?
  reservedAt        DateTime?
  purchasedAt       DateTime?
  deliveredAt       DateTime?
  receivedAt        DateTime?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  wishlistItem      WishlistItem @relation(fields: [wishlistItemId], references: [id])
  giver             User?        @relation(fields: [giverId], references: [id])

  @@index([wishlistItemId])
}

model Reward {
  id          Int      @id @default(autoincrement())
  spaceId     Int
  ownerKey    String
  title       String
  points      Int
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  space       Space    @relation(fields: [spaceId], references: [id])

  @@index([spaceId, ownerKey])
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum GiftStatus {
  PENDING
  RESERVED
  PURCHASED
  DELIVERED
  RECEIVED
}

// Test Plan:
// Join (success)
// curl -X POST http://127.0.0.1:3000/spaces/join
// -H "Content-Type: application/json"
// -d '{"code":"ABC123"}'
// Join (not found)
// curl -X POST http://127.0.0.1:3000/spaces/join
// -H "Content-Type: application/json"
// -d '{"code":"NOPE42"}'
// Get code (owner)
// curl -H "x-owner: true" http://127.0.0.1:3000/spaces/1/code
// Rotate code (owner)
// curl -X POST -H "x-owner: true" http://127.0.0.1:3000/spaces/1/code/rotate
